{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nconst initialState = {\n  products: [],\n  productsStatus: STATUS.IDLE,\n  productSingle: [],\n  productSingleStatus: STATUS.IDLE\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAsyncProducts.pending, (state, action) => {\n      state.productsStatus = STATUS.LOADING;\n    }).addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n      state.products = action.payload;\n      state.productsStatus = STATUS.SUCCEEDED;\n    }).addCase(fetchAsyncProducts.rejected, (state, action) => {\n      state.productsStatus = STATUS.FAILED;\n    }).addCase(fetchAsyncProductSingle.pending, (state, action) => {\n      state.productSingleStatus = STATUS.LOADING;\n    }).addCase(fetchAsyncProductSingle.fulfilled, (state, action) => {\n      state.productSingle = action.payload;\n      state.productSingleStatus = STATUS.SUCCEEDED;\n    }).addCase(fetchAsyncProductSingle.rejected, (state, action) => {\n      state.productSingleStatus = STATUS.FAILED;\n    });\n  }\n});\n\n// for getting the products list with limited numbers\nexport const fetchAsyncProducts = createAsyncThunk('products/fetch', async limit => {\n  const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n  const data = await response.json();\n  return data.products;\n});\n\n// getting the single product data also\nexport const fetchAsyncProductSingle = createAsyncThunk('product-single/fetch', async id => {\n  const response = await fetch(`${BASE_URL}products/${id}`);\n  const data = await response.json();\n  return data;\n});\nexport const getAllProducts = state => state.product.products;\nexport const getAllProductsStatus = state => state.product.productsStatus;\nexport const getProductSingle = state => state.product.productSingle;\nexport const getSingleProductStatus = state => state.product.productSingleStatus;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","STATUS","initialState","products","productsStatus","IDLE","productSingle","productSingleStatus","productSlice","name","reducers","extraReducers","builder","addCase","fetchAsyncProducts","pending","state","action","LOADING","fulfilled","payload","SUCCEEDED","rejected","FAILED","fetchAsyncProductSingle","limit","response","fetch","data","json","id","getAllProducts","product","getAllProductsStatus","getProductSingle","getSingleProductStatus","reducer"],"sources":["/Users/minalnakawe/Myntra-commerce-site-react-js/src/store/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\n\nconst initialState = {\n    products: [],\n    productsStatus: STATUS.IDLE,\n    productSingle: [],\n    productSingleStatus: STATUS.IDLE\n}\n\nconst productSlice = createSlice({\n    name: \"product\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchAsyncProducts.pending, (state, action) => {\n            state.productsStatus = STATUS.LOADING;\n        })\n\n        .addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n            state.products = action.payload;\n            state.productsStatus = STATUS.SUCCEEDED;\n        })\n        \n        .addCase(fetchAsyncProducts.rejected, (state, action) => {\n            state.productsStatus = STATUS.FAILED\n        })\n\n        .addCase(fetchAsyncProductSingle.pending, (state, action) => {\n            state.productSingleStatus = STATUS.LOADING;\n        })\n\n        .addCase(fetchAsyncProductSingle.fulfilled, (state, action) => {\n            state.productSingle = action.payload;\n            state.productSingleStatus = STATUS.SUCCEEDED;\n        })\n\n        .addCase(fetchAsyncProductSingle.rejected, (state, action) => {\n            state.productSingleStatus = STATUS.FAILED;\n        })\n    }\n});\n\n// for getting the products list with limited numbers\nexport const fetchAsyncProducts = createAsyncThunk('products/fetch', async(limit) => {\n    const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n    const data = await response.json();\n    return data.products;\n});\n\n// getting the single product data also\nexport const fetchAsyncProductSingle = createAsyncThunk('product-single/fetch', async(id) => {\n    const response = await fetch(`${BASE_URL}products/${id}`);\n    const data = await response.json();\n    return data;\n});\n\n\nexport const getAllProducts = (state) => state.product.products;\nexport const getAllProductsStatus = (state) => state.product.productsStatus;\nexport const getProductSingle = (state) => state.product.productSingle;\nexport const getSingleProductStatus = (state) => state.product.productSingleStatus;\nexport default productSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}