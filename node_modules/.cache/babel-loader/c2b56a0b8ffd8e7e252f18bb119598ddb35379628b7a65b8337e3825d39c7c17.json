{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst fetchFromLocalStorage = () => {\n  let cart = localStorage.getItem('cart');\n  if (cart) {\n    return JSON.parse(localStorage.getItem('cart'));\n  } else {\n    return [];\n  }\n};\nconst storeInLocalStorage = data => {\n  localStorage.setItem('cart', JSON.stringify(data));\n};\nconst initialState = {\n  carts: fetchFromLocalStorage(),\n  itemsCount: 0,\n  totalAmount: 0,\n  isCartMessageOn: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n      if (isItemInCart) {\n        const tempCart = state.carts.map(item => {\n          if (item.id === action.payload.id) {\n            let tempQty = item.quantity + action.payload.quantity;\n            let tempTotalPrice = tempQty * item.price;\n            return {\n              ...item,\n              quantity: tempQty,\n              totalPrice: tempTotalPrice\n            };\n          } else {\n            return item;\n          }\n        });\n        state.carts = tempCart;\n        storeInLocalStorage(state.carts);\n      } else {\n        state.carts.push(action.payload);\n        storeInLocalStorage(state.carts);\n      }\n    },\n    removeFromCart: (state, action) => {\n      const tempCart = state.carts.filter(item => item.id !== action.payload);\n      state.carts = tempCart;\n      storeInLocalStorage(state.carts);\n    },\n    clearCart: state => {\n      state.carts = [];\n      storeInLocalStorage(state.carts);\n    },\n    getCartTotal: state => {\n      state.totalAmount = state.carts.reduce((cartTotal, cartItem) => {\n        return cartTotal += cartItem.totalPrice;\n      }, 0);\n      state.itemsCount = state.carts.length;\n    },\n    toggleCartQty: (state, action) => {\n      const tempCart = state.carts.map(item => {\n        if (item.id === action.payload.id) {\n          let tempQty = item.quantity;\n          let tempTotalPrice = item.totalPrice;\n          if (action.payload.type === \"INC\") {\n            tempQty++;\n            if (tempQty === item.stock) tempQty = item.stock;\n            tempTotalPrice = tempQty * item.discountedPrice;\n          }\n          if (action.payload.type === \"DEC\") {\n            tempQty--;\n            if (tempQty < 1) tempQty = 1;\n            tempTotalPrice = tempQty * item.discountedPrice;\n          }\n          return {\n            ...item,\n            quantity: tempQty,\n            totalPrice: tempTotalPrice\n          };\n        } else {\n          return item;\n        }\n      });\n      state.carts = tempCart;\n      storeInLocalStorage(state.carts);\n    },\n    setCartMessageOn: state => {\n      state.isCartMessageOn = true;\n    },\n    setCartMessageOff: state => {\n      state.isCartMessageOn = false;\n    }\n  }\n});\nexport const {\n  addToCart,\n  setCartMessageOff,\n  setCartMessageOn,\n  getCartTotal,\n  toggleCartQty,\n  clearCart,\n  removeFromCart\n} = cartSlice.actions;\nexport const getAllCarts = state => state.cart.carts;\nexport const getCartItemsCount = state => state.cart.itemsCount;\nexport const getCartMessageStatus = state => state.cart.isCartMessageOn;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","fetchFromLocalStorage","cart","localStorage","getItem","JSON","parse","storeInLocalStorage","data","setItem","stringify","initialState","carts","itemsCount","totalAmount","isCartMessageOn","cartSlice","name","reducers","addToCart","state","action","isItemInCart","find","item","id","payload","tempCart","map","tempQty","quantity","tempTotalPrice","price","totalPrice","push","removeFromCart","filter","clearCart","getCartTotal","reduce","cartTotal","cartItem","length","toggleCartQty","type","stock","discountedPrice","setCartMessageOn","setCartMessageOff","actions","getAllCarts","getCartItemsCount","getCartMessageStatus","reducer"],"sources":["/Users/minalnakawe/snapup-commerce-site-react-js/src/store/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst fetchFromLocalStorage = () => {\n    let cart = localStorage.getItem('cart');\n    if(cart){\n        return JSON.parse(localStorage.getItem('cart'));\n    } else {\n        return [];\n    }\n}\n\nconst storeInLocalStorage = (data) => {\n    localStorage.setItem('cart', JSON.stringify(data));\n}\n\nconst initialState = {\n    carts: fetchFromLocalStorage(),\n    itemsCount: 0,\n    totalAmount: 0,\n    isCartMessageOn: false\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addToCart: (state, action) => {\n            const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n\n            if(isItemInCart){\n                const tempCart = state.carts.map(item => {\n                    if(item.id === action.payload.id){\n                        let tempQty = item.quantity + action.payload.quantity;\n                        let tempTotalPrice = tempQty * item.price;\n\n                        return {\n                            ...item, quantity: tempQty, totalPrice: tempTotalPrice\n                        }\n                    } else {\n                        return item;\n                    }\n                });\n\n                state.carts = tempCart;\n                storeInLocalStorage(state.carts);\n            } else {\n                state.carts.push(action.payload);\n                storeInLocalStorage(state.carts);\n            }\n        },\n\n        removeFromCart: (state, action) => {\n            const tempCart = state.carts.filter(item => item.id !== action.payload);\n            state.carts = tempCart;\n            storeInLocalStorage(state.carts);\n        },\n\n        clearCart: (state) => {\n            state.carts = [];\n            storeInLocalStorage(state.carts);\n        },\n\n        getCartTotal: (state) => {\n            state.totalAmount = state.carts.reduce((cartTotal, cartItem) => {\n                return cartTotal += cartItem.totalPrice\n            }, 0);\n\n            state.itemsCount = state.carts.length;\n        },\n\n        toggleCartQty: (state, action) => {\n            const tempCart = state.carts.map(item => {\n                if(item.id === action.payload.id){\n                    let tempQty = item.quantity;\n                    let tempTotalPrice = item.totalPrice;\n\n                    if(action.payload.type === \"INC\"){\n                        tempQty++;\n                        if(tempQty === item.stock) tempQty = item.stock;\n                        tempTotalPrice = tempQty * item.discountedPrice;\n                    }\n\n                    if(action.payload.type === \"DEC\"){\n                        tempQty--;\n                        if(tempQty < 1) tempQty = 1;\n                        tempTotalPrice = tempQty * item.discountedPrice;\n                    }\n\n                    return {...item, quantity: tempQty, totalPrice: tempTotalPrice};\n                } else {\n                    return item;\n                }\n            });\n\n            state.carts = tempCart;\n            storeInLocalStorage(state.carts);\n        },\n\n        setCartMessageOn: (state) => {\n            state.isCartMessageOn = true;\n        },\n\n        setCartMessageOff: (state) => {\n            state.isCartMessageOn = false;\n        }\n    }\n});\n\nexport const {addToCart, setCartMessageOff, setCartMessageOn, getCartTotal, toggleCartQty, clearCart, removeFromCart} = cartSlice.actions;\nexport const getAllCarts = (state) => state.cart.carts;\nexport const getCartItemsCount = (state) => state.cart.itemsCount;\nexport const getCartMessageStatus = (state) => state.cart.isCartMessageOn;\n\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}